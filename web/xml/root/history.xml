<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>

<!DOCTYPE document SYSTEM '../../common/dtd/objectweb.dtd'>

<document>
  <properties>
    <author email="javaservice@objectweb.org">javaservice team</author>
    <title>History</title>
    <filename>history.xml</filename>
    <pathtoroot>.</pathtoroot>
  </properties>

  <body>
    <s1 name="History">

	<subtitle>Version: 1.2.12 (ObjectWeb/Multiplan) -
        Released: August 01, 2005</subtitle>

        <ul>
          <li>Allow startup delay to be specified with <em>-startup seconds</em> optional parameter.</li>

		  <li>Default is for no startup delay to be performed by the process.</li>
		  
		  <li>If a delay is specified, this begins after the startup thread is invoked, allowing for a period
			of time to pass between the initial 'Starting' service status notification and the subsequent
			'Running' notification to Windows. If the startup thread completes sooner, the delay will still
			continue for the specified amount of time.</li>

		  <li>The only expected use for a startup delay is if it is known that the Java application takes a finite
			amount of time in performing startup operations, and the user wants Windows to return control only
			after that time period has passed. In this case, specify the number of seconds delay to apply
			and the JavaService main thread will pause (sleep) for that duration after the Java startup
			thread has been invoked.</li>
        </ul>

	<subtitle>Version: 1.2.11 (ObjectWeb/Multiplan) -
        Released: July 30, 2005</subtitle>

        <ul>
          <li>Allow output log file mode to be specified as either <em>append</em> or <em>overwrite</em></li>

		  <li>Default mode, since V1.2.5 is to append to existing output log files (for both stdout and stderr).</li>
		  
		  <li>If the optional end parameter is specified as <em>-overwrite</em> then this behaviour is changed
		  and both output and error log files will be overwritten with new content when the service starts.</li>

		  <li>Following on from V1.2.10: If a startup delay is absolutely required from JavaService, the
		  source distribution should be modified and rebuilt locally to specify a non-zero delay in the C++
		  code. This is supported by a constant definition within ServiceInterface.cpp (set to zero for release).</li>		  
        </ul>
		
	<subtitle>Version: 1.2.10 (ObjectWeb/Multiplan) -
        Released: July 29, 2005</subtitle>

        <ul>
          <li>Correct notification of service startup states to Windows Service Manager.</li>

		  <li>Internally, the previous versions of JavaService all reported the service status
		  to Windows as 'RUNNING' as soon as the startup request was received.
		  This version now reports the service status as 'STARTING' when first receiving the request,
		  followed by a subsequent report of service status as 'RUNNING' after firing the startup thread.</li>
		  
		  <li>The installation and user interface to JavaService is unchanged for this internal update.</li>
		  
		  <li>A 'hint' is passed to Windows Service Manager to indicate that service startup may take
		  three seconds before completion. This value is not configurable and is coded within the program.</li>
		  
		  <li>Note that JavaService does not wait for the startup thread to complete, so it is likely
		  that the final state transition will be notified shortly after the first report. This is a
		  limitation in the coding of the JavaService utility and is unlikely to be changed. As a
		  result, this update to the application meets the rules of Windows Services better, but
		  is not expected to have any impact on the startup processing of any actual services.</li>

		  <li>If a startup delay is absolutely required from JavaService, the recommendation is that
		  the source distribution is modified locally to include a hard-coded delay in the C++
		  code. This would be included between creation of the startup thread and notification of
		  the 'RUNNING' service status.</li>		  
        </ul>
		
	<subtitle>Version: 1.2.9 (ObjectWeb/Multiplan) -
        Released: July 21, 2005</subtitle>

        <ul>
          <li>Supported use of multiple service dependencies.</li>
		  
		  <li>Optional install parameter <em>-depends otherservices</em> now accepts comma-delimited list
		  of service nams, or single service name as before (name cannot contain a comma, though).</li>
		  
		  <li>If the dependency parameter is not specified, service will start up as configured (manual or auto).</li>
		  
		  <li>If the dependency parameter specifies a single service name, the installed service will only start up after the specified
		  service is also running (will start both services if command issued to start the dependant service).</li>
		  
		  <li>If the dependency parameter specifies a list of multiple service dependency names (separated by commas), the installed service
		  will only start up after all the specified services are also running (will start all services if necessary).</li>
		  
        </ul>
		
	<subtitle>Version: 1.2.8 (ObjectWeb/Multiplan) -
        Released: July 20, 2005</subtitle>

        <ul>
          <li>Supported use of <em>-classpath</em> and <em>-cp</em> options, not normally handled by JVM.</li>
		  
		  <li>Command format now detects the use of either &quot;-classpath=value&quot; or &quot;-cp=value&quot; options.
		  <br/>If present, this will be replaced with the correct form of option as &quot;-Djava.class.path=value&quot;.</li>
		  
		  <li>If any of the three explicit methods are used to specify the Java classpath (-cp, -classpath, -Djava.class.path)
		  then the program does not apply the local CLASSPATH definition, which would otherwise do as a default.</li>
		  
		  <li>Note that the program works with options <em>-cp=value</em> and <em>-classpath=value</em>
and this is not the same as the Java command line options <em>-cp value</em> and <em>-classpath value</em>.</li>
        </ul>
	
	<subtitle>Version: 1.2.7 (ObjectWeb/Multiplan) -
        Released: May 02, 2005</subtitle>

        <ul>
          <li>Added optional parameters to specify username and password to be used when running the service.</li>
		  <li>Command format now supports &quot;-user username -password password&quot; parameters.
		  <br/>Both the user and password values must be specified together, or not at all.</li>
		  <li><strong>NOTE</strong> The username value should be specified as a Windows-2000 Active Directory style entry
		  (i.e. <em>johndoe@foobar.com)</em> rather than the usual SMTP-style username; using the incorrect username style may
		  result in &quot;Overlapped I/O operation&quot; errors being reported. The results of this may be different under
		  earlier (Windows NT) or later (Windows XP/2003) system installations - please report any problems if experienced.</li>
        </ul>

	<subtitle>Version: 1.2.6 (ObjectWeb/Multiplan) -
        Released: April 30, 2005</subtitle>

        <ul>
          <li>Added use of <strong>CLASSPATH</strong> environment variable during service installation, which is added to JVM options
		  if <em>-Djava.class.path</em> is not specified in the original command line (and if CLASSPATH is defined).</li>
		  <li>This feature has been added to avoid problems where the Windows command-line length is exceeded
		  for service configurations that have long lists of class path locations.
		  <br/>
		  Alternative solutions for earlier versions would require manual editing of Registry entries.</li>
		  <li><strong>NOTE</strong> if the <em>-cp</em> or <em>-classpath</em> Java options are specified, this is not checked by the
		  JavaService installation process, so if CLASSPATH exists this will be added as a further option.</li>
        </ul>

	<subtitle>Version: 1.2.5 (ObjectWeb/Multiplan) -
        Released: March 10, 2005</subtitle>

        <ul>
          <li>Updated code to append to existing files when redirecting stdout/stderr streams.
		  <br/>
		  <strong>NOTE</strong> this functionality is only available when using a recent Java run-time environment (i.e. JDK 1.4).</li>
		  <li>Internal implementation uses a new constructor for FileOutputStream class, which was added for Java 1.4 JRE.
		  If this new constructor is not available from the run-time environment, the application defaults to the previous
		  mode and uses the standard constructor, which overwrites any existing log files on service startup.</li>
		  <li>This feature has been tested successfully under JDK 1.4.2_07, which appends to existing log files.
		  It has also been tested under JDK 1.3.1_07 and appends to existing files in that environment (not as expected).</li>
		  <li><em>This new release has not yet been tested with an earlier JDK, so the error-handling functionality has not yet
		  been tested to ensure that overwrite mode will be invoked if the new Java feature is not available at run-time.</em>
		  <br/>If problems are found with a JDK prior to 1.3.1_07, then please highlight this through the support forums.</li>
        </ul>
		
	<subtitle>Version: 1.2.4 (ObjectWeb/Multiplan Consultants Ltd) -
        Released: January 29, 2005</subtitle>

        <ul>
          <li>Added the ability to specify the NT service shutdown timeout.
		  <br/>An optional parameter &quot;-shutdown&quot; has been added to the installation command line, allowing the user to specify the
			length of time (in seconds) to allow for the Java method processing on shutdown, before timeout occurs and JVM is terminated.</li>
		  <li>This value is also stored in the registry (milliseconds value) and can be updated using RegEdit.</li>
		  <li>If the value is not found in the registry, the original default of 30 seconds will be used.</li>
		  <li>Decreased the hard-coded value for pause before exit, after JVM has terminated, from 90 to 15 seconds.</li>
        </ul>

	<subtitle>Version: 1.2.3 (Multiplan Consultants Ltd) -
        Released: July 22, 2003</subtitle>

        <ul>
          <li>Added an alternative command-line parameter <strong>-version</strong> <br/>
		  When specified interactively, the program now reports the version number and copyright information.</li>
		  <li>Changes to software build process under Visual Studio:-
		  	<ul>
		  	<li>Additional resource files definitions used, simplifying build of messages resource.</li>
			<li>Version number resource information built into application from source code.</li>
			<li>Debug instance of executable file now renamed to <strong>JavaServiceDebug.exe</strong></li>
			<li>Removed references to unused libraries and include files.</li>
		  	</ul>
		  </li>
          <li>Minor refactoring to the code:-
		  	<ul>
			<li>Local functions and data now restricted to module scope where applicable.</li>
			<li>If/Then/Else statements restructured to meet preferred code-style.</li>
			<li>Some areas of code re-ordered to remove duplication.</li>
			</ul>
		  </li>
		  <li>Product documentation updated:-
		  	<ul>
			<li>All HTML documentation now moved to the <strong>./docs/</strong> sub-directory.</li>
			<li>A new <strong>index.html</strong> page used to reference all other document files.</li>
			<li>Version history information split from the overview document.</li>
			<li>Software build process description updated accordingly.</li>
			<li>Updated Orion sample script to specify initial/maximum heap sizes.</li>
			<li>An initial FAQ has been defined to assist in early fault-finding efforts.</li>
			</ul>
		  </li>
        </ul>
		
	<subtitle>Version: 1.2.2 (Multiplan Consultants Ltd) -
        Released: May 17, 2003</subtitle>

        <ul>
          <li>Added the ability to specify automatic or manual service startup mode.<br/>
            An optional parameter <strong>-auto</strong> or <strong>-manual</strong> has been added to the command line
			to allow the service startup to be specified as automatic (the default) or manual. If manual
			service startup is specified, it will only run when issuing a command of the form <em>net start service</em>.</li>
          <li>Added an example of using the JavaService program to run the JBoss server software.</li>
          <li>Further changes to printf statements to show the service name used.</li>
        </ul>


	<subtitle>Version: 1.2.1 (Multiplan Consultants Ltd) -
        Released: November 03, 2002</subtitle>

        <ul>
          <li>Added the ability to specify an NT service dependency.<br />
            An optional parameter <strong>-depends</strong> has been added to the command line so that the user can specify an
			additional NT service that must be started before the registered Java service is run.</li>
          <li>Added new-line characters to the end of some printf statements to improve log file output.</li>
          <li>Fixed an unitialised pointer problem that resulted in an occasional memory access error.</li>
          <li>Added an example of using the JavaService program to run the Orion Application Server as a service.</li>
        </ul>


	<subtitle>Version: 1.2.0 (Alexandria Software Consulting) -
          Released: April 12, 2001</subtitle>

        <ul>
          <li>Added the ability to have registry values greater than 256 characters. 
            Registry access is now fully dynamic and values can have any length. 
            A lot of people were having problems with the 256 character limit. 
            I'm sorry it took so long to fix that, but I've been busy.</li>
          <li>Fixed several printf statements that were missing parameters. Thanks 
            to Anthony Tagunov for catching this.</li>
          <li>Fixed a problem that prevented registry errors from being displayed 
            properly. Thanks to Lars Johanson for sending in a fix for this.</li>
          <li>Fixed a missing parameter in the Tomcat 3.2 install batch file. 
            This is untested as I don't use Tomcat 3.2, so if someone would let 
            me know if it works or not, I would appreciate it. Thanks to Joe Siebenmann 
            for pointing out that there was a problem with the old batch file.</li>
          <li>Added a new parameter &quot;-current&quot; to allow the current 
            working directory to be specified. There were some people having problems 
            with code that used relative paths, so this should help them out.</li>
          <li>Added a new parameter &quot;-path&quot; to allow for extra path 
            information to be added for finding dependent DLLs. Thanks to Lars 
            Johanson for this submission.</li>
        </ul>

	<subtitle>Version: 1.1.1 (Alexandria Software Consulting) -
          Released: December 21, 2000</subtitle>

        <ul>
          <li>Added a new batch file to install Tomcat 3.2 that was contributed by James Bigler.</li>
        </ul>

	<subtitle>Version: 1.1.0 (Alexandria Software Consulting) -
          Released: October 11, 2000</subtitle>

        <ul>
          <li>Added an exit handler to the JVM so that a message is logged and 
            the service is stopped gracefully if the System.exit method is called. 
          </li>
        </ul>

	<subtitle>Version: 1.0.0 (Alexandria Software Consulting) -
          Released: August 27, 2000</subtitle>

        <ul>
          <li>Modified to work around a bug in the Sun J2SE 1.3 that caused the 
            JVM to exit and the service to stop whenever a user logged off of 
            the system.</li>
        </ul>

	<subtitle>Version: 0.9.0 (Alexandria Software Consulting) -
          Released: April 14, 2000</subtitle>

        <ul>
          <li>Initial Release.</li>
        </ul>

    </s1>
    
  </body>
</document>
